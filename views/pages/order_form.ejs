<%- include('../partials/header') %>
<%- include('../partials/staff_nav') %>

<style>
    .container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .dashboard {
        background-color: #f8f9fa;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        padding: 2rem;
    }

    .page-title {
        color: #1a73e8;
        text-align: center;
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        color: #333;
        font-weight: 500;
    }

    .form-group input,
    .form-group select {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
    }

    .form-group input:focus,
    .form-group select:focus {
        outline: none;
        border-color: #1a73e8;
        box-shadow: 0 0 0 2px rgba(26, 115, 232, 0.2);
    }

    .order-items {
        margin: 2rem 0;
    }

    .order-items h2 {
        color: #333;
        margin-bottom: 1rem;
    }

    .order-item {
        display: grid;
        grid-template-columns: 2fr 1fr 2fr auto;
        gap: 1rem;
        margin-bottom: 1rem;
        align-items: center;
    }

    .order-item select,
    .order-item input {
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
    }

    .button {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        background-color: #1a73e8;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        text-decoration: none;
        text-align: center;
        transition: background-color 0.2s;
    }

    .button:hover {
        background-color: #1557b0;
    }

    #addItem {
        margin-top: 1rem;
        width: 100%;
    }

    .remove-item {
        padding: 0.5rem 1rem;
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .remove-item:hover {
        background-color: #c82333;
    }

    .form-actions {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-top: 2rem;
    }

    .submit-button {
        padding: 1rem;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1.1rem;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .submit-button:hover {
        background-color: #218838;
    }

    .error-message {
        background-color: #ffebee;
        color: #c62828;
        padding: 1rem;
        border-radius: 5px;
        margin-bottom: 1.5rem;
        text-align: center;
    }
</style>

<div class="container">
    <div class="dashboard">
        <section>
            <h1 class="page-title"><%= order ? 'Edit Order' : 'New Order' %></h1>

            <% if (error) { %>
                <div class="error-message">
                    <%= error %>
                </div>
            <% } %>

            <form action="/staff/order/save" method="POST" id="orderForm">
                <% if (order && order.OrderID) { %>
                    <input type="hidden" name="orderId" value="<%= order.OrderID %>">
                <% } %>
                <div class="form-group">
                    <label for="tableNumber">Table Number:</label>
                    <input type="number" id="tableNumber" name="tableNumber" value="<%= order ? order.TableNumber : '' %>" required min="1" max="20">
                </div>

                <div class="form-group">
                    <label for="status">Status:</label>
                    <select id="status" name="status" required>
                        <option value="Placed" <%= order && order.Status === 'Placed' ? 'selected' : '' %>>Placed</option>
                        <option value="Preparing" <%= order && order.Status === 'Preparing' ? 'selected' : '' %>>Preparing</option>
                        <option value="Ready for Service" <%= order && order.Status === 'Ready for Service' ? 'selected' : '' %>>Ready for Service</option>
                        <option value="Served" <%= order && order.Status === 'Served' ? 'selected' : '' %>>Served</option>
                        <option value="Paid" <%= order && order.Status === 'Paid' ? 'selected' : '' %>>Paid</option>
                        <option value="Cancelled" <%= order && order.Status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                    </select>
                </div>

                <div class="order-items">
                    <h2>Order Items</h2>
                    <div id="itemsContainer">
                        <% if (order && order.items) { %>
                            <% order.items.forEach((item, index) => { %>
                                <div class="order-item">
                                    <select name="items[<%= index %>][menuItemId]" required>
                                        <% menuItems.forEach(menuItem => { %>
                                            <option value="<%= menuItem.MenuItemID %>" 
                                                    data-price="<%= menuItem.Price %>"
                                                    <%= item.MenuItemID === menuItem.MenuItemID ? 'selected' : '' %>>
                                                <%= menuItem.Name %> - $<%= menuItem.Price.toFixed(2) %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <input type="number" name="items[<%= index %>][quantity]" value="<%= item.Quantity %>" min="1" required>
                                    <input type="text" name="items[<%= index %>][specialRequests]" value="<%= item.SpecialRequests %>" placeholder="Special requests">
                                    <input type="hidden" name="items[<%= index %>][price]" value="<%= item.Price %>">
                                    <button type="button" class="remove-item">Remove</button>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                    <button type="button" id="addItem" class="button">Add Item</button>
                </div>

                <div class="form-actions">
                    <button type="submit" class="submit-button">Save Order</button>
                    <a href="/staff/dashboard" class="button">Cancel</a>
                </div>
            </form>
        </section>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const itemsContainer = document.getElementById('itemsContainer');
    const addItemButton = document.getElementById('addItem');
    const menuItems = <%- JSON.stringify(menuItems || []) %>;
    let itemCount = <%= order && order.items ? order.items.length : 0 %>;

    // Disable add item button if no menu items
    if (menuItems.length === 0) {
        if (addItemButton) {
            addItemButton.disabled = true;
            addItemButton.classList.add('disabled');
            addItemButton.title = 'No menu items available';
        }
    }

    function createItemElement() {
        if (menuItems.length === 0) {
            return document.createElement('div');
        }
        
        const div = document.createElement('div');
        div.className = 'order-item';
        div.innerHTML = `
            <select name="items[${itemCount}][menuItemId]" required>
                ${menuItems.map(item => `
                    <option value="${item.MenuItemID}" data-price="${item.Price}">
                        ${item.Name} - $${item.Price.toFixed(2)}
                    </option>
                `).join('')}
            </select>
            <input type="number" name="items[${itemCount}][quantity]" value="1" min="1" required>
            <input type="text" name="items[${itemCount}][specialRequests]" placeholder="Special requests">
            <input type="hidden" name="items[${itemCount}][price]" value="${menuItems[0].Price}">
            <button type="button" class="remove-item">Remove</button>
        `;

        // Add event listener for price update
        const select = div.querySelector('select');
        select.addEventListener('change', function() {
            const price = this.options[this.selectedIndex].dataset.price;
            this.parentElement.querySelector('input[name$="[price]"]').value = price;
        });

        // Add event listener for remove button
        div.querySelector('.remove-item').addEventListener('click', function() {
            div.remove();
        });

        return div;
    }

    // Auto-add first item if this is a new order and no items exist
    if (menuItems.length > 0 && itemCount === 0) {
        itemsContainer.appendChild(createItemElement());
        itemCount++;
    }

    if (addItemButton) {
        addItemButton.addEventListener('click', function() {
            if (menuItems.length > 0) {
                itemsContainer.appendChild(createItemElement());
                itemCount++;
            }
        });
    }

    // Add event listeners to existing remove buttons
    document.querySelectorAll('.remove-item').forEach(button => {
        button.addEventListener('click', function() {
            this.parentElement.remove();
        });
    });

    // Add event listeners to existing selects for price updates
    document.querySelectorAll('.order-item select').forEach(select => {
        select.addEventListener('change', function() {
            const price = this.options[this.selectedIndex].dataset.price;
            this.parentElement.querySelector('input[name$="[price]"]').value = price;
        });
    });
    
    // Add form validation to ensure at least one item exists
    document.getElementById('orderForm').addEventListener('submit', function(e) {
        if (itemsContainer.children.length === 0) {
            e.preventDefault();
            alert('Please add at least one item to the order.');
        }
    });
});
</script>

<%- include('../partials/footer') %> 